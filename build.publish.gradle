apply plugin: 'signing'

boolean validProperty(propertyName) {
  try { project.property(propertyName) != null }
  catch (MissingPropertyException) { false }
}
assert validProperty('signing.keyId'),             'properties for signing must be provided'
assert validProperty('signing.secretKeyRingFile'), 'properties for signing must be provided'

String askPassword(prompt) {
  "${System.console().readPassword(prompt)}"
}
ext.'signing.password' = askPassword("Enter password for PGP key ${property('signing.keyId')}: ")

signing {
  sign configurations.archives
}

github {
    owner = projectOwner
    repo = 'xml2eb'
    token = githubToken
    tagName = projectTag
    targetCommitish = 'master'
    name = projectTag
    draft = true
    body = projectReleaseBody
    assets = [
            'xml2eb/build/libs/xml2eb-' + projectVersion + '.jar',
            'xml2eb/build/libs/xml2eb-' + projectVersion + '-sorces.jar',
            'xml2eb/build/libs/xml2eb-' + projectVersion + '-javadoc.jar',
            'conv-wdic/build/distributions/conv-wdic-' + projectVersion + 'tgz',
            'conv-wdic/build/distributions/conv-wdic-' + projectVersion + 'zip',
            'conv-zipcode/build/distributions/conv-zipcode-' + projectVersion + 'tgz',
            'conv-zipcode/build/distributions/conv-zipcode-' + projectVersion + 'zip',
    ]
}
